# The port that the microservice will listen on
port: 8080
# Configuration for request parsing limits
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxInitialLineLength-int-
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxHeaderSize-int-
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxChunkSize-int-
#  * https://netty.io/4.0/api/io/netty/handler/codec/http/HttpRequestDecoder.html#HttpRequestDecoder--
# max-initial-line-length: 4096
# max-header-size: 8192
# max-chunk-size: 8192
# OMERO server that the microservice will communicate with (as a client)
omero:
    host: "localhost"
    port: 4064
# Copy of the OMERO server configuration which will be reused
omero.server:
    omero.data.dir: "/OMERO"
    omero.db.host: "localhost"
    omero.db.name: "omero"
    omero.db.port: "5432"
    omero.db.user: "omero"
    omero.db.pass: "omero"
    # OMERO_HOME/lib/scripts
    omero.script_repo_root: "/opt/omero/lib/scripts"
# OMERO.web configuration
omero.web:
    session_cookie_name: "sessionid"
# Redis instance that OMERO.web is using to store session information
redis:
    uri: "redis://password@localhost:6379/1"
